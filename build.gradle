buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.github.ben-manes:gradle-versions-plugin:0.39.0"
    }
}
plugins {
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

ext {
    metricsVersion = "2.8.5"
    http4sVersion = "0.22.0"
    monixVersion = "3.4.0" // Used only in tests.
}

nexusPublishing {
    repositories {
        sonatype()
    }
}

allprojects {
    group = 'com.avast.clients.storage'
    version = version == 'unspecified' ? 'DEVELOPER-SNAPSHOT' : version
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'scala'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    apply plugin: "com.github.ben-manes.versions"

    sourceCompatibility = '1.8'

    repositories {
        mavenCentral()
    }

    jar {
        manifest {
            attributes 'Implementation-Version': archiveVersion
        }
    }

    dependencies {
        api 'org.slf4j:jul-to-slf4j:1.7.32'
        api 'org.slf4j:jcl-over-slf4j:1.7.32'
        api 'com.typesafe.scala-logging:scala-logging_2.13:3.9.4'

        testImplementation "org.http4s:http4s-blaze-server_2.13:$http4sVersion"

        testImplementation "ch.qos.logback:logback-classic:1.2.6"
        testImplementation 'junit:junit:4.13.2'
        testImplementation "org.scalatest:scalatest_2.13:3.0.9"
        testImplementation 'org.mockito:mockito-core:4.0.0'
        testImplementation "org.pegdown:pegdown:1.6.0"
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    afterEvaluate {
        publishing {
            publications {
                mavenJava(MavenPublication) {
                    from(components.java)
                    artifactId = archivesBaseName
                    pom {
                        name = 'Scala storage client'
                        description = 'Finally-tagless implementation of client for misc. storages represented by backends. Supports backends fallbacks.'
                        url = 'https://github.com/avast/storage-client'
                        licenses {
                            license {
                                name = 'Apache License 2.0'
                                url = 'http://www.apache.org/licenses/LICENSE-2.0'
                            }
                        }
                        developers {
                            developer {
                                id = 'jendakol'
                                name = 'Jenda Kolena'
                                email = 'jan.kolena@avast.com'
                            }
                        }
                        scm {
                            connection = 'scm:git:git://github.com/avast/storage-client.git'
                            developerConnection = 'scm:git:ssh://github.com/avast/storage-client.git'
                            url = 'https://github.com/avast/storage-client'
                        }
                    }
                }
            }
        }
    }

    signing {
        String base64Key = System.getenv('SIGNING_KEY')
        if (base64Key) {
            useInMemoryPgpKeys(new String(Base64.decoder.decode(base64Key)), System.getenv('SIGNING_PASSWORD'))
            sign publishing.publications
        }
    }

}
